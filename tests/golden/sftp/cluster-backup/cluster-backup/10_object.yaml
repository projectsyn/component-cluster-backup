apiVersion: v1
kind: Namespace
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: syn-cluster-backup
    name: syn-cluster-backup
  name: syn-cluster-backup
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: object-backup
    name: object-backup
  name: object-backup
  namespace: syn-cluster-backup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: cluster-backup-object-reader
    name: cluster-backup-object-reader
  name: cluster-backup-object-reader
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: cluster-backup-object-reader
    name: cluster-backup-object-reader
  name: cluster-backup-object-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-backup-object-reader
subjects:
  - kind: ServiceAccount
    name: object-backup
    namespace: syn-cluster-backup
---
apiVersion: v1
data:
  known-to-fail: |-
    .+mutators
    .+reviews
    .+validators
    bindings
    deploymentconfigrollbacks
    imagesignatures
    imagestreamimages
    imagestreamimports
    imagestreammappings
    mutations
    projectrequests
    useridentitymappings
    validations
  must-exist: |-
    configmaps
    daemonsets
    deployments
    endpoints
    horizontalpodautoscalers
    ingresses
    jobs
    limitranges
    namespaces
    nodes
    persistentvolumeclaims
    persistentvolumes
    replicasets
    resourcequotas
    roles
    secrets
    serviceaccounts
    services
    statefulsets
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: object-dumper
    name: object-dumper
  name: object-dumper
  namespace: syn-cluster-backup
---
apiVersion: k8up.io/v1
kind: PreBackupPod
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: object-dumper
  name: object-dumper
  namespace: syn-cluster-backup
spec:
  backupCommand: /usr/local/bin/dump-objects -sd /data
  fileExtension: .tar.gz
  pod:
    spec:
      containers:
        - args: []
          command:
            - tail
            - -f
            - /dev/null
          env:
            - name: HOME
              value: /home/dumper
          image: docker.io/projectsyn/k8s-object-dumper:v0.2.3
          imagePullPolicy: IfNotPresent
          name: object-dumper
          ports: []
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /home/dumper
              name: home
            - mountPath: /usr/local/share/k8s-object-dumper
              name: config
      imagePullSecrets: []
      initContainers: []
      serviceAccountName: object-backup
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: home
        - configMap:
            name: object-dumper
          name: config
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects-backup-password
    name: objects-backup-password
  name: objects-backup-password
  namespace: syn-cluster-backup
stringData:
  password: t-silent-test-1234/c-green-test-1234/cluster-backup/password
type: Opaque
---
apiVersion: v1
data:
  RESTIC_REPOSITORY_FILE: sftp:sftp.example.com:cluster-backup
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects-backup-repository
    name: objects-backup-repository
  name: objects-backup-repository
  namespace: syn-cluster-backup
---
apiVersion: v1
kind: Secret
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects-backup-sftp-config
    name: objects-backup-sftp-config
  name: objects-backup-sftp-config
  namespace: syn-cluster-backup
stringData:
  config: |+
    Host sftp.example.com
    User exampleuser
    Port 22
    IdentityFile ~/.ssh/ssh_key

  known_hosts: |+
    sftp.example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPSszUbK2KmbjXKSWCajPlTCR8GBCElkd2I1ciBari3k

  ssh_key: |
    t-silent-test-1234/c-green-test-1234/cluster-backup/ssh_private_key
  ssh_key.pub: |
    t-silent-test-1234/c-green-test-1234/cluster-backup/ssh_public_key
type: Opaque
---
apiVersion: k8up.io/v1
kind: PodConfig
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects
    name: objects
  name: objects
  namespace: syn-cluster-backup
spec:
  template:
    spec:
      containers:
        - env:
            - name: HOME
              value: /home/k8up
          name: backup
          volumeMounts:
            - mountPath: /home/k8up/.ssh
              name: ssh-config
      volumes:
        - name: ssh-config
          secret:
            defaultMode: 256
            secretName: objects-backup-sftp-config
---
apiVersion: k8up.io/v1
kind: Schedule
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects
  name: objects
  namespace: syn-cluster-backup
spec:
  backend:
    envFrom:
      - configMapRef:
          name: objects-backup-repository
    repoPasswordSecretRef:
      key: password
      name: objects-backup-password
  backup:
    keepJobs: 5
    schedule: 25 * * * *
  check:
    schedule: 30 3 * * *
  podConfigRef:
    name: objects
  prune:
    retention:
      keepDaily: 30
      keepLast: 20
    schedule: 10 */4 * * *
