apiVersion: v1
kind: Namespace
metadata:
  annotations:
    openshift.io/node-selector: ''
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: syn-cluster-backup-etcd
    name: syn-cluster-backup-etcd
  name: syn-cluster-backup-etcd
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd-backup
    name: etcd-backup
  name: etcd-backup
  namespace: syn-cluster-backup-etcd
---
allowHostDirVolumePlugin: true
allowHostIPC: false
allowHostNetwork: true
allowHostPID: false
allowHostPorts: false
allowPrivilegedContainer: true
allowedCapabilities: null
apiVersion: security.openshift.io/v1
defaultAddCapabilities: []
fsGroup:
  type: MustRunAs
kind: SecurityContextConstraints
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: syn-cluster-backup-etcd
    name: syn-cluster-backup-etcd
  name: syn-cluster-backup-etcd
readOnlyRootFilesystem: true
requiredDropCapabilities: []
runAsUser:
  type: RunAsAny
seLinuxContext:
  type: MustRunAs
supplementalGroups:
  type: RunAsAny
users:
  - system:serviceaccount:syn-cluster-backup-etcd:etcd-backup
volumes:
  - configMap
  - downwardAPI
  - emptyDir
  - hostPath
  - projected
  - secret
---
apiVersion: k8up.io/v1
kind: PreBackupPod
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd-backup
  name: etcd-backup
  namespace: syn-cluster-backup-etcd
spec:
  backupCommand: tar czf - -C /host/mnt/backup/ .
  fileExtension: .tar.gz
  pod:
    spec:
      containers:
        - args: []
          command:
            - tail
            - -f
            - /dev/null
          env: []
          image: docker.io/debian:bullseye
          imagePullPolicy: IfNotPresent
          name: etcd-backup
          ports: []
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /host
              name: host
            - mountPath: /host/mnt/backup
              name: backup
      hostNetwork: true
      imagePullSecrets: []
      initContainers:
        - args:
            - /usr/local/bin/cluster-backup.sh
            - /mnt/backup
          command:
            - chroot
            - /host
          env: []
          image: docker.io/debian:bullseye
          imagePullPolicy: IfNotPresent
          name: dump-database
          ports: []
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
          securityContext:
            privileged: true
            runAsUser: 0
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /host/mnt/backup
              name: backup
            - mountPath: /host
              name: host
      nodeSelector:
        node-role.kubernetes.io/master: ''
      serviceAccountName: etcd-backup
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
      volumes:
        - hostPath:
            path: /
            type: Directory
          name: host
        - emptyDir: {}
          name: backup
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd-backup-password
    name: etcd-backup-password
  name: etcd-backup-password
  namespace: syn-cluster-backup-etcd
stringData:
  password: t-silent-test-1234/c-green-test-1234/cluster-backup/password
type: Opaque
---
apiVersion: v1
data:
  repository: sftp:sftp.example.com:cluster-backup/etcd
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd-backup-repository
    name: etcd-backup-repository
  name: etcd-backup-repository
  namespace: syn-cluster-backup-etcd
---
apiVersion: v1
kind: Secret
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd-backup-sftp-config
    name: etcd-backup-sftp-config
  name: etcd-backup-sftp-config
  namespace: syn-cluster-backup-etcd
stringData:
  config: |+
    Host sftp.example.com
    User exampleuser
    Port 22
    IdentityFile ~/.ssh/ssh_key

  known_hosts: |+
    sftp.example.com ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIPSszUbK2KmbjXKSWCajPlTCR8GBCElkd2I1ciBari3k

  ssh_key: |
    t-silent-test-1234/c-green-test-1234/cluster-backup/ssh_private_key
  ssh_key.pub: |
    t-silent-test-1234/c-green-test-1234/cluster-backup/ssh_public_key
type: Opaque
---
apiVersion: k8up.io/v1
kind: PodConfig
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd
    name: etcd
  name: etcd
  namespace: syn-cluster-backup-etcd
spec:
  template:
    spec:
      containers:
        - env:
            - name: HOME
              value: /home/k8up
            - name: RESTIC_REPOSITORY_FILE
              value: /home/k8up/.job/repository
            - name: RESTIC_PASSWORD_FILE
              value: /home/k8up/.secret/password
          name: backup
      volumes:
        - name: ssh-config
          secret:
            defaultMode: 256
            secretName: etcd-backup-sftp-config
        - configMap:
            name: etcd-backup-repository
          name: restic-repository
        - name: backup-secret
          secret:
            secretName: etcd-backup-password
---
apiVersion: k8up.io/v1
kind: Schedule
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: etcd
  name: etcd
  namespace: syn-cluster-backup-etcd
spec:
  backend:
    repoPasswordSecretRef:
      key: password
      name: etcd-backup-password
    tlsOptions:
      caCert: /mnt/ca/ca.crt
    volumeMounts:
      - mountPath: /mnt/ca/
        name: ca
      - mountPath: /home/k8up/.ssh
        name: ssh-config
      - mountPath: /home/k8up/.job
        name: restic-repository
      - mountPath: /home/k8up/.secret
        name: backup-secret
  backup:
    keepJobs: 5
    schedule: 13 3 * * *
    volumes:
      - configMap:
          name: k8up-custom-ca
        name: ca
  check:
    schedule: 30 3 * * *
  podConfigRef:
    name: etcd
  prune:
    retention:
      keepDaily: 30
      keepLast: 20
    schedule: 20 */4 * * *
---
apiVersion: v1
data:
  ca.crt: |
    -----BEGIN CERTIFICATE-----
    MY AWESOME CA
    -----END CERTIFICATE-----
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: k8up-custom-ca
  name: k8up-custom-ca
  namespace: syn-cluster-backup-etcd
