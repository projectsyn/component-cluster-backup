apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    name: object-backup
  name: object-backup
  namespace: syn-cluster-backup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  labels:
    name: cluster-backup-object-reader
  name: cluster-backup-object-reader
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    name: cluster-backup-object-reader
  name: cluster-backup-object-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-backup-object-reader
subjects:
  - kind: ServiceAccount
    name: object-backup
    namespace: syn-cluster-backup
---
apiVersion: v1
data:
  known-to-fail: '.+mutators

    .+reviews

    .+validators

    bindings

    deploymentconfigrollbacks

    imagesignatures

    imagestreamimages

    imagestreamimports

    imagestreammappings

    mutations

    projectrequests

    useridentitymappings

    validations'
  must-exist: 'configmaps

    daemonsets

    deployments

    endpoints

    horizontalpodautoscalers

    ingresses

    jobs

    limitranges

    namespaces

    nodes

    persistentvolumeclaims

    persistentvolumes

    replicasets

    resourcequotas

    roles

    secrets

    serviceaccounts

    services

    statefulsets'
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    name: object-dumper
  name: object-dumper
  namespace: syn-cluster-backup
---
apiVersion: backup.appuio.ch/v1alpha1
kind: PreBackupPod
metadata:
  name: object-dumper
  namespace: syn-cluster-backup
spec:
  backupCommand: /usr/local/bin/dump-objects -sd /data
  fileExtension: .tar.gz
  pod:
    spec:
      containers:
        - args: []
          command:
            - tail
            - -f
            - /dev/null
          env:
            - name: HOME
              value: /home/dumper
          image: docker.io/projectsyn/k8s-object-dumper:v0.2.3
          imagePullPolicy: IfNotPresent
          name: object-dumper
          ports: []
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /home/dumper
              name: home
            - mountPath: /usr/local/share/k8s-object-dumper
              name: config
      imagePullSecrets: []
      initContainers: []
      serviceAccountName: object-backup
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: home
        - configMap:
            name: object-dumper
          name: config
