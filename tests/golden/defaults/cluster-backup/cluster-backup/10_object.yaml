apiVersion: v1
kind: Namespace
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: syn-cluster-backup
    name: syn-cluster-backup
  name: syn-cluster-backup
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: object-backup
    name: object-backup
  name: object-backup
  namespace: syn-cluster-backup
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: cluster-backup-object-reader
    name: cluster-backup-object-reader
  name: cluster-backup-object-reader
rules:
  - apiGroups:
      - '*'
    resources:
      - '*'
    verbs:
      - get
      - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: cluster-backup-object-reader
    name: cluster-backup-object-reader
  name: cluster-backup-object-reader
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-backup-object-reader
subjects:
  - kind: ServiceAccount
    name: object-backup
    namespace: syn-cluster-backup
---
apiVersion: v1
data:
  dump.sh: |
    #!/bin/bash
    set -euo pipefail

    output_dir="/data"

    k8s-object-dumper  "-dir" "${output_dir}" "$@"

    ( cd "${output_dir}" && tar c . )
kind: ConfigMap
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: object-dumper-script
    name: object-dumper-script
  name: object-dumper-script
  namespace: syn-cluster-backup
---
apiVersion: k8up.io/v1
kind: PreBackupPod
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: object-dumper
  name: object-dumper
  namespace: syn-cluster-backup
spec:
  backupCommand: /scripts/dump.sh -must-exist=configmaps -must-exist=daemonsets.apps
    -must-exist=deployments.apps -must-exist=endpoints -must-exist=horizontalpodautoscalers.autoscaling
    -must-exist=ingresses.networking.k8s.io -must-exist=jobs.batch -must-exist=limitranges
    -must-exist=namespaces -must-exist=nodes -must-exist=persistentvolumeclaims -must-exist=persistentvolumes
    -must-exist=replicasets.apps -must-exist=resourcequotas -must-exist=roles.rbac.authorization.k8s.io
    -must-exist=secrets -must-exist=serviceaccounts -must-exist=services -must-exist=statefulsets.apps
  fileExtension: .tar
  pod:
    spec:
      containers:
        - args: []
          command:
            - tail
            - -f
            - /dev/null
          env:
            - name: HOME
              value: /home/dumper
          image: ghcr.io/projectsyn/k8s-object-dumper:v0.3.0
          imagePullPolicy: IfNotPresent
          name: object-dumper
          ports: []
          stdin: false
          tty: false
          volumeMounts:
            - mountPath: /data
              name: data
            - mountPath: /home/dumper
              name: home
            - mountPath: /scripts
              name: scripts
      imagePullSecrets: []
      initContainers: []
      serviceAccountName: object-backup
      terminationGracePeriodSeconds: 30
      volumes:
        - emptyDir: {}
          name: data
        - emptyDir: {}
          name: home
        - configMap:
            defaultMode: 493
            name: object-dumper-script
          name: scripts
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects-backup-password
    name: objects-backup-password
  name: objects-backup-password
  namespace: syn-cluster-backup
stringData:
  password: t-silent-test-1234/c-green-test-1234/cluster-backup/password
type: Opaque
---
apiVersion: v1
data: {}
kind: Secret
metadata:
  annotations: {}
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects-backup-s3-credentials
    name: objects-backup-s3-credentials
  name: objects-backup-s3-credentials
  namespace: syn-cluster-backup
stringData:
  password: t-silent-test-1234/c-green-test-1234/cluster-backup/s3_secret_key
  username: t-silent-test-1234/c-green-test-1234/cluster-backup/s3_access_key
type: Opaque
---
apiVersion: k8up.io/v1
kind: Schedule
metadata:
  labels:
    app.kubernetes.io/component: cluster-backup
    app.kubernetes.io/managed-by: commodore
    app.kubernetes.io/name: objects
  name: objects
  namespace: syn-cluster-backup
spec:
  backend:
    repoPasswordSecretRef:
      key: password
      name: objects-backup-password
    s3:
      accessKeyIDSecretRef:
        key: username
        name: objects-backup-s3-credentials
      bucket: c-green-test-1234-cluster-backup
      endpoint: null
      secretAccessKeySecretRef:
        key: password
        name: objects-backup-s3-credentials
  backup:
    keepJobs: 5
    schedule: 25 * * * *
  check:
    schedule: 30 3 * * *
  prune:
    retention:
      keepDaily: 30
      keepLast: 20
    schedule: 10 */4 * * *
